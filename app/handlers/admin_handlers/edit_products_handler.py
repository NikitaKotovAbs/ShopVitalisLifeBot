import logging

from aiogram.types import ReplyKeyboardRemove

from app.keyboard import kb_staff_menu
from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from app.keyboard import kb_nav
from app.handlers.admin_handlers.add_product_handler import AddProductStates
from app.keyboard.callback_data import StaffAction
from app.utils.db.operations.fetch_data import ProductFetcher, UserFetcher
from app.utils.db.operations.remove_data import ProductRemoved
from app.utils.view_data import show_product

router = Router()

@router.callback_query(StaffAction.filter(F.action == "add"))
async def handle_add_product_callback(
    callback: types.CallbackQuery,
    state: FSMContext
):
    try:
        await callback.message.answer(
            "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç–∞:",
            reply_markup=types.ReplyKeyboardRemove()
        )
        await state.set_state(AddProductStates.waiting_for_title)
        await callback.answer()
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞: {e}")
        await callback.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–∞", show_alert=True)

@router.callback_query(StaffAction.filter(F.action == "delete"))
async def handle_delete_product_callback(
        callback: types.CallbackQuery,
        callback_data: StaffAction
):
    try:
        product_id = callback_data.product_id
        # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–¥—É–∫—Ç
        success = ProductRemoved.remove_product_by_id(product_id)
        if success:
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
            products = ProductFetcher.all_juices()
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å (–ª–∏–±–æ 0, –ª–∏–±–æ –ø—Ä–µ–¥—ã–¥—É—â–∏–π - 1)
            new_index = 0  # –∏–ª–∏ –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å –∏ —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞—Ç—å

            if products:  # –ï—Å–ª–∏ –æ—Å—Ç–∞–ª–∏—Å—å –ø—Ä–æ–¥—É–∫—Ç—ã –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
                await show_product(
                    target=callback,
                    index=new_index,
                    fetch_data_func=ProductFetcher.all_juices,
                    keyboard_func=kb_nav,
                    is_admin=True
                )
                await callback.answer("‚úÖ –ü—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª–µ–Ω")
            else:
                # –ï—Å–ª–∏ –ø—Ä–æ–¥—É–∫—Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å
                await callback.message.edit_text(
                    "üõí –¢–æ–≤–∞—Ä—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å",
                    reply_markup=kb_staff_menu(role="owner")  # –í–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞
                )
                await callback.answer("‚úÖ –ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ–¥—É–∫—Ç —É–¥–∞–ª–µ–Ω")
        else:
            await callback.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç", show_alert=True)

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞: {e}")
        await callback.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–æ–¥—É–∫—Ç–∞", show_alert=True)


@router.callback_query(StaffAction.filter(F.action == "back_staff_menu"))
async def handle_back_staff_menu_callback(callback: types.CallbackQuery):
    telegram_id = callback.from_user.id
    user_data = UserFetcher.get_user_by_telegram_id(telegram_id)

    if not user_data:
        await callback.answer("–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã", show_alert=True)
        return

    try:
        if user_data.get('is_owner'):
            # –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
            await callback.message.delete()

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await callback.message.answer(
                "–í—ã –∑–∞—à–ª–∏ –≤ –ø–∞–Ω–µ–ª—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –∫–∞–∫ –ê–¥–º–∏–Ω",
                reply_markup=ReplyKeyboardRemove()
            )

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
            await callback.message.answer(
                "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
                reply_markup=kb_staff_menu(role="owner")
            )

        elif user_data.get('is_staff'):
            await callback.message.delete()
            await callback.message.answer(
                "–í—ã –∑–∞—à–ª–∏ –≤ –ø–∞–Ω–µ–ª—å –ø–µ—Ä—Å–æ–Ω–∞–ª–∞ –∫–∞–∫ –°–æ—Ç—Ä—É–¥–Ω–∏–∫",
                reply_markup=ReplyKeyboardRemove()
            )
        else:
            await callback.message.delete()
            await callback.message.answer(
                "–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ staff-–ø–∞–Ω–µ–ª–∏",
                reply_markup=ReplyKeyboardRemove()
            )

        await callback.answer()

    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å: {e}")
        await callback.answer("‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", show_alert=True)