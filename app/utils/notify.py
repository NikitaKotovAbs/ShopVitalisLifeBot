from aiogram import Bot
from typing import Optional
import logging


class Notifier:
    _status_names = {
        "new": "üÜï –ù–æ–≤—ã–π",
        "processing": "üîÑ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ",
        "delivering": "üöö –í –¥–æ—Å—Ç–∞–≤–∫–µ",
        "delivered": "üì¶ –î–æ—Å—Ç–∞–≤–ª–µ–Ω",
        "completed": "‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω",
        "cancelled": "‚ùå –û—Ç–º–µ–Ω–µ–Ω"
    }

    @classmethod
    def get_status_display(cls, status: str) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫—Ä–∞—Å–∏–≤–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞"""
        return cls._status_names.get(status, status)

    @classmethod
    async def notify_order_status_changed(
            cls,
            bot: Bot,
            user_id: int,
            order_id: int,
            old_status: str,
            new_status: str
    ) -> bool:
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞–∫–∞–∑–∞"""
        try:
            message = (
                f"üì¢ –°—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ #{order_id} –∏–∑–º–µ–Ω–µ–Ω:\n"
                f"üîπ –ë—ã–ª–æ: {cls.get_status_display(old_status)}\n"
                f"üî∏ –°—Ç–∞–ª–æ: {cls.get_status_display(new_status)}\n\n"
                f"–°–ø–∞—Å–∏–±–æ –∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞!"
            )

            await bot.send_message(
                chat_id=user_id,
                text=message
            )
            return True
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            return False